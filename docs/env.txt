Spark 2.2.1:
  CONFIGURATION:
    Path: /state/partition1/ysma/spark-2.2.1-bin-hadoop2.7
    Cluster URI: spark://dell-01:7078
    Master: dell-01 Slaves: dell-08/09/10
    UI: Spark WebUI 8081, Current job 4040, history server 18081, events logged at eventLogs
  COMMANDS:
    Spark shell: $SPARK_HOME/bin/spark-shell --master spark://dell-01:7078

Hadoop 2.7:
  CONFIGURATION:
    Path: /state/partition1/ysma/hadoop-2.7.5
    HDFS: hdfs://dell01:9002
  COMMANDS:
    bin/hdfs dfs -command
    bin/hadoop namenode format
    ${HADOOP_HOME}sbin/start-dfs.sh ${HADOOP_HOME}/sbin/stop-dfs.sh

Kafka 1.0.0:
  CONFIGURATION:
    Path: /state/partition1/ysma/kafka_2.11-1.0.0
    Default kafka port at 9092
    Config zookeeper integration in server.properties.
    The zookeeper.properties is used for Kafka's standalone zookeeper cluster, NEVER use that!
    Key fields: broker.id(machine specific), log.dir, zookeeper.connect
  COMMANDS:
    Server ops: ${KAFKA_HOME}/bin/kafka-server-start.sh -daemon ${KAFKA_HOME}/config/server.properties
    Create a topic: ${KAFKA_HOME}/bin/kafka-topics.sh --zookeeper dell-08.epcc:5215 --create --replication=factor 1 --partitions 1 --topic test
    Delete a topic: ${KAFKA_HOME}/bin/kafka-topics.sh --zookeeper dell-08.epcc:5215 --delete --topic test
    Verify a topic: ${KAFKA_HOME}/bin/kafka-topics.sh --zookeeper dell-08.epcc:5215 --describe --topic test
    Produce msgs to topic: ${KAFKA_HOME}/bin/kafka-console-producer.sh --broker-list dell-08.epcc:9092 --topic test
    Consume msgs from topc: ${KAFKA_HOME}/bin/kafka-console-consumer.sh --bootstrap-server dell-08.epcc:9092 --topic test --from-beginning

Kafka-manager 1.3.3.16:
  CONFIGURATION:
    Path: /state/partition1/ysma/kafka-manager-1.3.3.16
  COMMANDS:
    nohup bin/kafka-manager -Dconfig.file=conf/application.conf -Dhttp.port=9333

Storm 1.2.1:
  CONFIGURATION:
    Path: /state/partition1/ysma/apache-storm-1.2.1
    UI port: 8090, Worker port: 6800-6803
    Nimbus on dell-01, Supervisor on dell-08/09/10
  COMMANDS:
    ${STORM_HOME}/bin/storm nimbus/supervisor/ui

Zookeeper 3.4.10:
  CONFIGURATION:
    Path: /state/partition1/ysma/zookeeper-3.4.10
    configured at localhost:5215, in standalone mode.
    conf: conf/zoo.cfg & data/myid
    ./run-all.sh $ZK_HOME/bin/zkServer.sh start/stop/status
    Or telnet localhost 5215; srvr<CR>
  COMMANDS:
    ${ZK_HOME}/bin/zkCli.sh -server dell-08.epcc:5215, then use ls/get

Flink 1.4.1
  CONFIGURATION:
    Path: /state/partition1/ysma/flink-1.4.1
    Web port 8091
  COMMANDS:
    ${FLINK_HOME}/bin/start-all.sh

Redis 4.0.8:
  CONFIGURATION:
    Path: /state/partition1/ysma/redis-4.0.8
    Install: make; make test; make PREFIX=/state/partition1/ysma install
    currently deployed on dell-08, if we have more machines, we can consider use a dedicated redis.
    Connection: dell-08.epcc:6379
  COMMANDS:
    redis-server redis.conf --daemonize yes
    redis-cli -h dell-08.epcc -p 6379 (get/put/keys pat)


UI urls:
  Spark: localhost:8081
  Storm: localhost:8090
  Flink: localhost:8091
  Kafka: localhost:9333


Scala 2.11.11: ~/env/scala-2.11.11/
